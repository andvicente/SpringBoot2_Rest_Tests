buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.andvicente'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
    springfoxVersion = '2.8.0'
    restAssuredVersion = '3.1.0'
	cucumberVersion = '3.0.2'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')

    //Documentacao Swagger
    compile("io.springfox:springfox-swagger-ui:${springfoxVersion}")
    compile("io.springfox:springfox-swagger2:${springfoxVersion}")

    testCompile("io.rest-assured:rest-assured:${restAssuredVersion}")
    compile("io.rest-assured:json-path:${restAssuredVersion}")
    testCompile("io.rest-assured:json-schema-validator:${restAssuredVersion}")

	testCompile("io.cucumber:cucumber-jvm:${cucumberVersion}")
	testCompile("io.cucumber:cucumber-core:${cucumberVersion}")
	testCompile("io.cucumber:cucumber-java:${cucumberVersion}")
	testCompile("io.cucumber:cucumber-junit:${cucumberVersion}")
}

task cucumber(dependsOn: testClasses) {
	doLast {
		javaexec {
			main = "cucumber.api.cli.Main"
			classpath = configurations.testRuntimeClasspath + sourceSets.main.output + sourceSets.test.output
			args = ['--plugin', 'pretty', '--glue', 'com.andvicente.springboot2rest.cucumber.steps', 'src/test/resources']
		}
	}
}
